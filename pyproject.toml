[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''


[tool.isort]
line_length = 120
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
use_parentheses = true
not_skip = "__init__.py"
skip_glob = "*/setup.py"
filter_files = true


[tool.pylint.messages_control]
disable = [
    "attribute-defined-outside-init",
    "duplicate-code",
    "fixme",
    "invalid-name",
    "missing-docstring",
    "protected-access",
    "too-few-public-methods",
    "format",  # handled by black
]


[tool.pylint.reports]
output-format = "text"
files-output = false
reports = false
evaluation = "10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"


[tool.pylint.logging]
logging-modules="logging"


[tool.pylint.miscellaneous]
notes = ["FIXME", "TODO"]


[tool.pylint.similarities]
min-similarity-lines = 4
ignore-comments = true
ignore-docstrings = true
ignore-imports = false


[tool.pylint.variables]
init-import = false
dummy-variables-rgx = "_$|dummy"
callbacks = ["cb_", "_cb"]


[tool.pylint.format]
max-line-length = 120
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"
single-line-if-stmt = false
no-space-check= ["trailing-comma", "dict-separator"]
max-module-lines=2000
indent-string = '    '
indent-after-paren = 4


[tool.pylint.basic]
bad-functions = ["map", "filter", "input"]
good-names = ["i", "j", "k", "n", "m", "_", "__"]
bad-names = ["foo", "bar", "asd"]
include-naming-hint = false
function-rgx = "[a-z_][a-z0-9_]{2,30}$"
function-name-hint = "[a-z_][a-z0-9_]{2,30}$"
variable-rgx = "[a-z_][a-z0-9_]{2,30}$"
variable-name-hint = "[a-z_][a-z0-9_]{2,30}$"
const-rgx = "(([A-Z_][A-Z0-9_]*)|(__.*__))$"
const-name-hint = "(([A-Z_][A-Z0-9_]*)|(__.*__))$"
attr-rgx = "[a-z_][a-z0-9_]{2,}$"
attr-name-hint = "[a-z_][a-z0-9_]{2,}$"
argument-rgx = "[a-z_][a-z0-9_]{2,30}$"
argument-name-hint = "[a-z_][a-z0-9_]{2,30}$"
class-attribute-rgx = "([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$"
class-attribute-name-hint = "([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$"
inlinevar-rgx = "[A-Za-z_][A-Za-z0-9_]*$"
inlinevar-name-hint = "[A-Za-z_][A-Za-z0-9_]*$"
class-rgx = "[A-Z_][a-zA-Z0-9]+$"
class-name-hint = "[A-Z_][a-zA-Z0-9]+$"
module-rgx = "(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$"
module-name-hint = "(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$"
method-rgx = "[a-z_][a-z0-9_]{2,}$"
method-name-hint = "[a-z_][a-z0-9_]{2,}$"
no-docstring-rgx = "__.*__"
docstring-min-length = -1
property-classes = "abc.abstractproperty"


[too.pylint.typecheck]
ignore-mixin-members = true
ignored-modules = []
ignored-classes = ["SQLObject", "optparse.Values", "thread._local", "_thread._local"]
generated-members = ["REQUEST", "acl_users", "aq_parent", "generated-members=numpy.*", "torch.*"]
contextmanager-decorators=["contextlib.contextmanager"]


[tool.pylint.spelling]
spelling-dict = ""
spelling-ignore-words = ""
spelling-private-dict-file = ""
spelling-store-unknown-words = false


[tools.pylint.design]
max-args = 10
ignored-argument-names = "_.*"
max-locals = 25
max-returns = 11
max-branches = 26
max-statements = 100
max-parents = 7
max-attributes = 11
min-public-methods = 2
max-public-methods = 25


[tool.pylint.classes]
defining-attr-methods = ["__init__", "__new__", "setUp"]
valid-classmethod-first-arg = "cls"
valid-metaclass-classmethod-first-arg = "mcs"
exclude-protected = ["_asdict", "_fields", "_replace", "_source", "_make"]


[tool.pylint.imports]
deprecated-modules = ["regsub", "TERMIOS", "Bastion", "rexec"]
import-graph = ""
ext-import-graph = ""
int-import-graph = ""


[tool.pylint.exceptioms]
overgeneral-exceptions = "Exception"
